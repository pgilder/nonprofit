{
  "_args": [
    [
      {
        "raw": "simple-schema",
        "scope": null,
        "escapedName": "simple-schema",
        "name": "simple-schema",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/pgilder/projects/nonprofit"
    ]
  ],
  "_from": "simple-schema@latest",
  "_id": "simple-schema@1.1.0",
  "_inCache": true,
  "_location": "/simple-schema",
  "_npmUser": {
    "name": "diversario",
    "email": "ilya.shaisultanov@gmail.com"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "simple-schema",
    "scope": null,
    "escapedName": "simple-schema",
    "name": "simple-schema",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/simple-schema/-/simple-schema-1.1.0.tgz",
  "_shasum": "4720f28838f977b606bdb31f777b8d61a0dd5b72",
  "_shrinkwrap": null,
  "_spec": "simple-schema",
  "_where": "/Users/pgilder/projects/nonprofit",
  "author": {
    "name": "Ilya Shaisultanov",
    "email": "ilya.shaisultanov@gmail.com",
    "url": "http://git.io/ilya"
  },
  "bugs": {
    "url": "https://github.com/diversario/simple-schema/issues"
  },
  "dependencies": {},
  "description": "Simple object validation framework",
  "devDependencies": {
    "coveralls": "~2.3.0",
    "istanbul": "~0.1.44",
    "mocha": "~1.13.0",
    "mocha-istanbul": "~0.2.0"
  },
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "shasum": "4720f28838f977b606bdb31f777b8d61a0dd5b72",
    "tarball": "https://registry.npmjs.org/simple-schema/-/simple-schema-1.1.0.tgz"
  },
  "homepage": "https://github.com/diversario/simple-schema#readme",
  "keywords": [
    "validation",
    "schema",
    "json"
  ],
  "license": "MIT",
  "main": "index",
  "maintainers": [
    {
      "name": "diversario",
      "email": "ilya.shaisultanov@gmail.com"
    }
  ],
  "name": "simple-schema",
  "optionalDependencies": {},
  "readme": "# simple-schema\n\n  Simple object validation framework with no dependencies.\n\n  [![Build Status](https://secure.travis-ci.org/diversario/simple-schema.png?branch=master)](http://travis-ci.org/diversario/simple-schema)\n  [![Coverage Status](https://coveralls.io/repos/diversario/simple-schema/badge.png?branch=master)](https://coveralls.io/r/diversario/simple-schema?branch=master)\n  [![Dependency Status](https://david-dm.org/diversario/simple-schema.png)](https://david-dm.org/diversario/simple-schema)\n  [![NPM version](https://badge.fury.io/js/simple-schema.png)](http://badge.fury.io/js/simple-schema)\n\n## Installation\n\nvia npm:\n\n    $ npm install simple-schema\n\n## Usage\n\nProperty declarations can specify a property name or a path to a property using dot-notation (`nested.object.prop2`). If part of the path is an array - validator will treat the rest of the path as elements of objects in that array. E.g., `array.prop1` will validate property `prop1` on every object in array `array`. Nested array are supported as well.\n\nSupported property options:\n\n* `required`: _Boolean_ If this field is required\n* `type`: _String, Array_ A lower*cased constructor name, 'null' and 'undefined'. Setting this property to an array of values will look for one of the values. Possible values are:\n    - `object`\n    - `regexp`\n    - `array`\n    - `function`\n    - `string`\n    - `number`\n    - `date`\n    - `boolean`\n* `regexp`: _RegExp_ Regular expression to run on property value. Array of expressions is supported as well and validation will pass if at least one regular expression passes.\n* `regexpAll`: _RegExp_ Regular expression to run on property value. Array of expressions is supported as well and validation will pass only if all expressions pass.\n* `function`: _Function, String_ Function to run with `this` being the object and property name as first argument. This parameter can also be specified as a string if you want to point to a function in the global scope (defined as `global.fn = myFunc`)\n* `min`, `max`: _Number_ Depending on property type these options can specify:\n  * string length\n  * numeric range\n  * array length\n* `error`: _Object_ Optional error properties. Validator does not use this property, it's purely for convenience.\n  * `code`: _Any_ Error code\n  * `message`: _Any_ Error message\n\nRunning validation returns an array of violated rules, as such:\n\n\n```javascript\n[\n    {\n        property: 'prop1',\n        value: 'Value of prop1',\n        rule: { /* rule as defined in the schema */ }\n    }\n]\n```\n\n e.g. an empty array means success.\n\n## Example\n```javascript\n\nvar validate = require('simple-schema')\n  , assert = require('assert')\n\nvar schema = {\n  prop1: {\n    required: true,\n    type: 'string',\n    error: {\n      code: 'NOTASTRING',\n      message: 'It is not a string'\n    }\n  },\n  'nested.object.prop2': {\n    required: false\n  }\n}\n\nvar myObject = {\n  prop1: 'str',\n  nested: {\n    object: {} // missing prop2 here\n  }\n}\n\n// validationResult will hold an array of violated rules or an empty array\nvar validationResult = validate(myObject, schema)\nassert(validationResult.length === 0) // validation succeeded\n```\n\n## Tests\n\nYou need `mocha`.\n\n    make test\n\nYou can check code coverage report by running\n\n    make coverage\n    \nCoverage report will be in `reports/lcov-report/index.html` file.\n\n\n## License \n\n(The MIT License) \n\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nÂ© Ilya Shaisultanov, 2013\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/diversario/simple-schema.git"
  },
  "scripts": {
    "test": "make coveralls"
  },
  "version": "1.1.0"
}
